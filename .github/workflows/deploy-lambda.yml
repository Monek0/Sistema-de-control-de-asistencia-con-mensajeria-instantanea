name: Deploy Backend to AWS Lambda

on:
  push:
    branches:
      - main
    paths:
      - 'Plataforma_Atrasos/**'
      - '!Plataforma_Atrasos/frontend/**'
      - '!Plataforma_Atrasos/cypress/**'
      - '!Plataforma_Atrasos/__mocks__/**'
      - '!**.md'

jobs:
  deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest
    environment: main
    defaults:
      run:
        working-directory: Plataforma_Atrasos
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: Plataforma_Atrasos/package-lock.json

      - name: Install dependencies
        run: |
          # Install production dependencies first
          npm install --production --no-optional
          
          # Install required serverless plugins
          npm install --no-save serverless-offline serverless-dotenv-plugin
          
          # Install serverless globally
          npm install -g serverless@3
          
          # Verify plugins installation
          ls -la node_modules/serverless-offline || echo "serverless-offline not found"
          ls -la node_modules/serverless-dotenv-plugin || echo "serverless-dotenv-plugin not found"

      - name: Debug environment (no sensitive info)
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Working directory: $(pwd)"
          echo "AWS region to be used: us-east-2"
          
      - name: Deploy to AWS Lambda
        run: |
          serverless --version
          serverless deploy --stage production --verbose --region us-east-2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2
          AWS_DEFAULT_REGION: us-east-2
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }} 