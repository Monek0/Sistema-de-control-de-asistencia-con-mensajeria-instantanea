name: Deploy Backend to AWS Lambda

on:
  push:
    branches:
      - main
    paths:
      - 'Plataforma_Atrasos/**'
      - '!Plataforma_Atrasos/frontend/**'
      - '!Plataforma_Atrasos/cypress/**'
      - '!Plataforma_Atrasos/__mocks__/**'
      - '!**.md'

jobs:
  deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Plataforma_Atrasos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: Plataforma_Atrasos/package-lock.json

      - name: Install production dependencies only
        run: npm i --omit=dev --no-optional

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          mask-aws-account-id: true

      - name: Install Serverless Framework
        run: npm install -g serverless@3

      - name: Deploy to AWS Lambda
        run: |
          serverless --version
          serverless deploy --stage production --verbose
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }} 